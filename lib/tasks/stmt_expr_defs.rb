# frozen_string_literal: true

require "ostruct"

## StmtExprVars
#
# Abstraction of instance variables in statement and expression classes
class StmtExprVars
  attr_reader :instance_vars

  def initialize(instance_vars)
    @instance_vars = instance_vars.split(",").map(&:strip)
  end

  def list
    instance_vars.join(", ")
  end

  def attr_string
    str = instance_vars
          .map { |i| ":#{i}" }
          .join(", ")

    "attr_reader #{str}"
  end

  def assignment_string
    instance_vars
      .map { |i| "    @#{i} = #{i}" }
      .join("\n")
  end
end

StmtExprDef = Struct.new(:base_class, :class_name, :instance_vars) do
  def vars
    @vars ||= StmtExprVars.new(instance_vars)
  end

  def to_s
    <<~EXPRESSION_CLASS_STR
      class #{class_name}#{base_class} < #{base_class}
        #{vars.attr_string}

        def initialize(#{vars.list})
          #{vars.assignment_string}
        end

        def accept(visitor)
          visitor.visit_#{class_name.downcase}_#{base_class.downcase}(self)
        end
      end
    EXPRESSION_CLASS_STR
  end

  def base_class_str
    <<~BASE_CLASS_STR
      class #{base_class}
      end
    BASE_CLASS_STR
  end

  def self.file_header
    <<~FILE_HEADER
      # frozen_string_literal: true

      ## THIS IS AN AUTOGENERATED FILE--DO NOT EDIT
      module Rlox

    FILE_HEADER
  end
end
