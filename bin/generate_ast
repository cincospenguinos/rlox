#!/usr/bin/env ruby
# frozen_string_literal: true

def print_usage
  puts 'Usage: generate_ast <output filename>'
end

if ARGV.size != 1
  print_usage
  exit 1
end

BASE_CLASS_NAME = 'Expr'

FILE_HEADER = <<~head
# frozen_string_literal: true

## THIS IS AN AUTOGENERATED FILE--DO NOT EDIT
module Rlox
  class #{BASE_CLASS_NAME}
  end

head

EXPRESSION_DEFS = [
  'Binary   : left_expression, operator_token, right_expression',
  'Grouping : expression',
  'Literal  : literal_value',
  'Unary    : operator_token, right_expression',
]

File.open(ARGV[0], 'w') do |f|
  f.puts(FILE_HEADER)

  EXPRESSION_DEFS.each do |type|
    class_name = type.split(':')[0].strip
    fields = type.split(':')[1].strip
    instance_names = fields.split(',').map(&:strip)

    f.puts "  class #{class_name} < #{BASE_CLASS_NAME}"
    instance_names.map { |i| ":#{i}" }
      .each { |instance_var| f.puts("    attr_reader #{instance_var}") }
    f.puts ''
    f.puts "    def initialize(#{fields})"
    instance_names.map { |i| "@#{i} = #{i} "}
      .each { |line| f.puts("      #{line}") }
    f.puts '    end'
    f.puts '  end'
  end

  f.puts('end')
end